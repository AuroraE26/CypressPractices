{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-23T22:02:56.268Z",
    "end": "2022-11-23T22:03:10.430Z",
    "duration": 14162,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e90a2f4e-e2e1-4365-866c-a1470951fd43",
      "title": "",
      "fullFile": "cypress\\integration\\Test21.js",
      "file": "cypress\\integration\\Test21.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e36c6b6e-0ff9-47db-882e-b24f1f87e78e",
          "title": "",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "",
              "fullTitle": " ",
              "timedOut": null,
              "duration": 11034,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('url') + '/angularpractice/');\nconst homePage = new _HomePage.default();\nconst productPage = new _ProductPage.default();\nhomePage.getEditBox().type(this.data.name);\nhomePage.getGender().select(this.data.gender);\nhomePage.getTwoWayDataBinding().should('have.value', this.data.name);\nhomePage.getEditBox().should('have.attr', 'minlength', 2);\nhomePage.getEntrepreneur().should('be.disabled');\nhomePage.getShopTab().click();\ncy.get(this.data.productName).each((el, index, list) => {\n  cy.selectProduct(el);\n});\nproductPage.checkOutButton().click(); //-----------TEST 21 Starts here \ncy.contains('Checkout').click();\ncy.get('#country').type('India');\ncy.get('.suggestions>ul>li>a').click();\ncy.get('#checkbox2').click({\n  force: true\n});\ncy.get('input[value=\"Purchase\"]').click();\ncy.get('div[class*=\"alert\"]').then(element => {\n  const actualText = element.text();\n  expect(actualText.includes('Success')).to.be.true;\n});",
              "err": {},
              "uuid": "a9d10f31-a73a-418b-9c01-bbd385b2777b",
              "parentUUID": "e36c6b6e-0ff9-47db-882e-b24f1f87e78e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9d10f31-a73a-418b-9c01-bbd385b2777b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11034,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}